plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

test{
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(17)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

task runServers(type:Exec) {
    doFirst {
        println "Starting server1"
        workingDir = file("E:\\Tech\\Projects\\MC\\MultiFabricServers\\server1")
        commandLine = ['cmd', '/C', 'start', "classicLauncher.bat"]
    }
}

build{
    doLast{
        copy {
            from ".\\build\\libs\\velocitylib-1.0-SNAPSHOT.jar"
            into "C:\\Users\\colin\\curseforge\\minecraft\\Instances\\1.18.2Fabric\\mods"
        }
        copy {
            from ".\\build\\libs\\velocitylib-1.0-SNAPSHOT.jar"
            into "C:\\Users\\colin\\Documents\\tempServerMC\\fabricServers\\server1\\mods"
        }
        copy {
            from ".\\build\\libs\\velocitylib-1.0-SNAPSHOT.jar"
            into "C:\\Users\\colin\\Documents\\tempServerMC\\fabricServers\\server2\\mods"
        }
    }
    finalizedBy runServers
}


// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
